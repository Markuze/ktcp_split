From befb28633941b505dce132b33a1dc51cac0f9c16 Mon Sep 17 00:00:00 2001
From: Build VM <build@example.com>
Date: Fri, 3 Jan 2020 19:28:34 +0000
Subject: [PATCH 24/24] removing traces + bad flow

---
 net/core/datagram.c | 10 +++++-----
 net/core/skbuff.c   | 10 ++++++----
 net/socket.c        |  2 +-
 3 files changed, 12 insertions(+), 10 deletions(-)

diff --git a/net/core/datagram.c b/net/core/datagram.c
index 9e2e9f6a0..e10a4f3cd 100644
--- a/net/core/datagram.c
+++ b/net/core/datagram.c
@@ -587,9 +587,9 @@ static inline ssize_t kvec_get_frag_advance(struct iov_iter *from,
 	ssize_t copied = 0;
 	struct kvec *kvec = &from->kvec[from->iov_offset];
 
-	trace_printk("%d: kvec %lx [%lu]\n", from->type, (unsigned long)kvec, from->iov_offset);
+	//trace_printk("%d: kvec %lx [%lu]\n", from->type, (unsigned long)kvec, from->iov_offset);
 
-	trace_printk("iter 0x%lx len %lu : base %lx [%lx] iov len %lu off %lx\n", (unsigned long)from, len,
+	//trace_printk("iter 0x%lx len %lu : base %lx [%lx] iov len %lu off %lx\n", (unsigned long)from, len,
 		(unsigned long)virt_to_page(kvec->iov_base),
 		(unsigned long)virt_to_head_page(kvec->iov_base),
 		kvec->iov_len,
@@ -618,7 +618,7 @@ int skb_zerocopy_sg_from_iter(struct sock *sk, struct sk_buff *skb,
 {
 	int frag = skb_shinfo(skb)->nr_frags;
 
-	trace_printk("collecting Frags skb %p [%p -> %lu]\n", skb, from, len);
+	//trace_printk("collecting Frags skb %p [%p -> %lu]\n", skb, from, len);
 
 	while (len && iov_iter_count(from)) {
 		struct page *page = NULL;
@@ -630,7 +630,7 @@ int skb_zerocopy_sg_from_iter(struct sock *sk, struct sk_buff *skb,
 			return -EMSGSIZE;
 
 		copied = kvec_get_frag_advance(from, &page, &offset, len);
-		trace_printk("collected %lu [%p + %lu]\n", copied, page, offset);
+		//trace_printk("collected %lu [%p + %lu]\n", copied, page, offset);
 		len -= copied;
 
 		truesize = copied;
@@ -645,7 +645,7 @@ int skb_zerocopy_sg_from_iter(struct sock *sk, struct sk_buff *skb,
 			refcount_add(truesize, &skb->sk->sk_wmem_alloc);
 		}
 		skb_fill_page_desc(skb, frag++, page, offset, copied);
-		trace_printk("skb %p nr frags %d\n", skb, frag);
+		//trace_printk("skb %p nr frags %d\n", skb, frag);
 	}
 	return 0;
 }
diff --git a/net/core/skbuff.c b/net/core/skbuff.c
index 33396557f..c7b9633d1 100644
--- a/net/core/skbuff.c
+++ b/net/core/skbuff.c
@@ -1043,15 +1043,17 @@ void sock_kern_zerocopy_cb(struct ubuf_info *uarg, bool success)
 	struct sock *sk = skb->sk;
 	int i, num_frags = skb_shinfo(skb)->nr_frags;
 
-	trace_printk("%s skb: %p freeing pages[%d]...\n", __FUNCTION__, skb, num_frags);
+	//trace_printk("%s skb: %p freeing pages[%d]...\n", __FUNCTION__, skb, num_frags);
+	if (!uarg->len || sock_flag(sk, SOCK_DEAD)) {
+		consume_skb(skb);
+		sock_put(sk);
+	}
 #if 0
 	for (i = 0; i < num_frags; i++) {
 		skb_frag_t *f = &skb_shinfo(skb)->frags[i];
 		trace_printk("put %lx head [%lx]\n", (unsigned long)f->page.p, (unsigned long)compound_head(f->page.p));
 		put_page(f->page.p); // ? put_page?
 	}
-	consume_skb(skb);
-	sock_put(sk);
 #endif
 }
 EXPORT_SYMBOL(sock_kern_zerocopy_cb);
@@ -1157,7 +1159,7 @@ int skb_zerocopy_iter_stream(struct sock *sk, struct sk_buff *skb,
 		skb->sk = save_sk;
 		return err;
 	}
-	trace_printk("Collected data, setting zcopy [%p]\n", skb);
+	//trace_printk("Collected data, setting zcopy [%p]\n", skb);
 	skb_zcopy_set(skb, uarg);
 	return skb->len - orig_len;
 }
diff --git a/net/socket.c b/net/socket.c
index f8ab1d08e..343e63231 100644
--- a/net/socket.c
+++ b/net/socket.c
@@ -666,7 +666,7 @@ EXPORT_SYMBOL(sock_sendmsg);
 int trace_sendmsg(struct socket *sock, struct msghdr *msg,
 		   struct kvec *vec, size_t num, size_t size)
 {
-	trace_printk("Sendung vec %lx\n", (unsigned long)vec);
+	//trace_printk("Sending vec %lx\n", (unsigned long)vec);
 	return kernel_sendmsg(sock, msg, vec, num, size);
 }
 EXPORT_SYMBOL(trace_sendmsg);
-- 
2.17.1

