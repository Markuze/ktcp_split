From fb58915328e78bc72514a8dd5138aaf93afdf48a Mon Sep 17 00:00:00 2001
From: Build VM <build@example.com>
Date: Sun, 29 Dec 2019 17:28:30 +0000
Subject: [PATCH 15/24] fucnikg refcount

---
 net/ipv4/tcp.c | 32 +++++++++++++++++++++++---------
 1 file changed, 23 insertions(+), 9 deletions(-)

diff --git a/net/ipv4/tcp.c b/net/ipv4/tcp.c
index 1bffdb8bb..7db39bf83 100644
--- a/net/ipv4/tcp.c
+++ b/net/ipv4/tcp.c
@@ -3685,6 +3685,11 @@ struct kvec_desc {
 	read_descriptor_t desc_t;
 };
 
+static inline void skb_frag_get(const skb_frag_t *frag)
+{
+	get_page(compound_head(skb_frag_page(frag)));
+}
+
 int skb_zerocopy_rx(read_descriptor_t *desc_t, struct sk_buff *skb, u32 offset, size_t len)
 {
 	int copied = 0, skipped = 0;
@@ -3708,20 +3713,24 @@ int skb_zerocopy_rx(read_descriptor_t *desc_t, struct sk_buff *skb, u32 offset,
 		copied = desc->pages_array->iov_len;
 		len -= copied;
 
-		get_page_unless_zero(virt_to_page(skb->head));
-		trace_printk("Head: %p<%d> [%lu/%lu] [%d,%d] (?%d)",
+		get_page(virt_to_head_page(skb->head));
+		trace_printk("Head: %p<%d> [%lu/%lu] [%d,%d] (?%d)\n",
 				virt_to_head_page(desc->pages_array->iov_base),
-				page_count(virt_to_page(desc->pages_array->iov_base)),
+				page_count(virt_to_head_page(desc->pages_array->iov_base)),
 				desc->pages_array->iov_len, len, copied, desc->nr_pages, offset);
 
 		offset = 0;
 		desc->pages_array++;
 		desc->nr_pages--;
+	} else {
+		offset -= skb_headlen(skb);
 	}
 
 	len = skb->data_len - offset;
-	if (unlikely(!len))
-		return -EINVAL;
+	if (unlikely(!len)) {
+		trace_printk("%p len %d data len %d of %d copied %d\n", skb, skb->len, skb->data_len, offset, copied);
+		return copied;
+	}
 
 	frags = skb_shinfo(skb)->frags;
 	while (offset) {
@@ -3737,7 +3746,6 @@ int skb_zerocopy_rx(read_descriptor_t *desc_t, struct sk_buff *skb, u32 offset,
 	while (desc->nr_pages) {
 		if (unlikely(!(skb_shinfo(skb)->nr_frags -skipped)))
 			break;
-		__skb_frag_ref(frags);
 		desc->pages_array->iov_base = skb_frag_address(frags) + offset;
 		desc->pages_array->iov_len = skb_frag_size(frags) - offset;
 
@@ -3745,12 +3753,13 @@ int skb_zerocopy_rx(read_descriptor_t *desc_t, struct sk_buff *skb, u32 offset,
 		len -= skb_frag_size(frags);
 		copied += skb_frag_size(frags);
 
-		trace_printk("Frag: %p = %p [%d]<%d> [%lu/%lu] [%d,%d]",
+		trace_printk("Frag: %p = %p [%d]<%d> [%lu/%lu] [%d,%d]\n",
 				skb_frag_page(frags),
 				virt_to_head_page(desc->pages_array->iov_base), frags->page_offset + offset,
-				page_count(virt_to_page(desc->pages_array->iov_base)),
+				page_count(virt_to_head_page(desc->pages_array->iov_base)),
 				desc->pages_array->iov_len, len, copied, desc->nr_pages);
 
+		skb_frag_get(frags);//TODO: BUG - Doesnt use compound head!!! - GRO use case breaks
 		offset = 0;
 		desc->pages_array++;
 		desc->nr_pages--;
@@ -3766,8 +3775,13 @@ int skb_zerocopy_rx(read_descriptor_t *desc_t, struct sk_buff *skb, u32 offset,
 
 int tcp_read_sock_zcopy(struct socket *sock, struct kvec *pages_array, unsigned int nr_pages)
 {
+	int rc = 0;
 	struct kvec_desc desc = {.pages_array = pages_array, .nr_pages = nr_pages};
 
-	return tcp_read_sock(sock->sk, &desc.desc_t , skb_zerocopy_rx);
+	lock_sock(sock->sk);
+	rc =  tcp_read_sock(sock->sk, &desc.desc_t , skb_zerocopy_rx);
+	release_sock(sock->sk);
+	return rc;
+
 }
 EXPORT_SYMBOL(tcp_read_sock_zcopy);
-- 
2.17.1

