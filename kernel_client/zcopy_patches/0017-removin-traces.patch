From 4b864f765b53e26edd333a7325d480756564e737 Mon Sep 17 00:00:00 2001
From: Build VM <build@example.com>
Date: Mon, 30 Dec 2019 12:56:14 +0000
Subject: [PATCH 17/24] removin traces

---
 net/ipv4/tcp.c | 16 ++++++++++------
 1 file changed, 10 insertions(+), 6 deletions(-)

diff --git a/net/ipv4/tcp.c b/net/ipv4/tcp.c
index 54ad5b041..fbf7da289 100644
--- a/net/ipv4/tcp.c
+++ b/net/ipv4/tcp.c
@@ -3696,10 +3696,13 @@ int skb_zerocopy_rx(read_descriptor_t *desc_t, struct sk_buff *skb, u32 offset,
 	const skb_frag_t *frags;
 	struct kvec_desc *desc = container_of(desc_t, struct kvec_desc, desc_t);
 
+	desc_t->count = desc->nr_pages;
+
 	if (unlikely(!desc->nr_pages)) {
-		trace_printk("nr_pages = 0\n");
+		//trace_printk("nr_pages = 0\n");
 		return -ENOMEM;
 	}
+
 	if (skb_headlen(skb) > offset) {
 		if (!(skb->head_frag)) {
 			trace_printk("head_frag error...\n");
@@ -3712,11 +3715,12 @@ int skb_zerocopy_rx(read_descriptor_t *desc_t, struct sk_buff *skb, u32 offset,
 		len -= copied;
 
 		get_page(virt_to_head_page(skb->head));
+#if 0
 		trace_printk("Head: %p<%d> [%lu/%lu] [%d,%d] (?%d)\n",
 				virt_to_head_page(desc->pages_array->iov_base),
 				page_count(virt_to_head_page(desc->pages_array->iov_base)),
 				desc->pages_array->iov_len, len, copied, desc->nr_pages, offset);
-
+#endif
 		offset = 0;
 		desc->pages_array++;
 		desc->nr_pages--;
@@ -3726,7 +3730,7 @@ int skb_zerocopy_rx(read_descriptor_t *desc_t, struct sk_buff *skb, u32 offset,
 
 	len = skb->data_len - offset;
 	if (unlikely(!len)) {
-		trace_printk("%p len %d data len %d of %d copied %d\n", skb, skb->len, skb->data_len, offset, copied);
+	//	trace_printk("%p len %d data len %d of %d copied %d\n", skb, skb->len, skb->data_len, offset, copied);
 		return copied;
 	}
 
@@ -3739,7 +3743,7 @@ int skb_zerocopy_rx(read_descriptor_t *desc_t, struct sk_buff *skb, u32 offset,
 		frags++;
 	}
 
-	trace_printk("Collecting frags: %d [%d] of %u len %lu\n", skb_shinfo(skb)->nr_frags, skipped, offset, len);
+//	trace_printk("Collecting frags: %d [%d] of %u len %lu\n", skb_shinfo(skb)->nr_frags, skipped, offset, len);
 
 	while (desc->nr_pages) {
 		if (unlikely(!(skb_shinfo(skb)->nr_frags -skipped))) {
@@ -3751,12 +3755,12 @@ int skb_zerocopy_rx(read_descriptor_t *desc_t, struct sk_buff *skb, u32 offset,
 
 		len -= skb_frag_size(frags);
 		copied += skb_frag_size(frags);
-
+#if 0
 		trace_printk("Frag: %p [%d]<%d> [%lu=%u/%lu] [%d,%d]\n",
 				virt_to_head_page(desc->pages_array->iov_base), frags->page_offset + offset,
 				page_count(virt_to_head_page(desc->pages_array->iov_base)),
 				desc->pages_array->iov_len, skb_frag_size(frags), len, copied, desc->nr_pages);
-
+#endif
 		skb_frag_get(frags);//TODO: BUG - Doesnt use compound head!!! - GRO use case breaks
 		offset = 0;
 		desc->pages_array++;
-- 
2.17.1

