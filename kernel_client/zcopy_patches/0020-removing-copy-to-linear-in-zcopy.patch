From 1549c3766a20ab4fa1098831f46235f6b85021d8 Mon Sep 17 00:00:00 2001
From: Build VM <build@example.com>
Date: Fri, 3 Jan 2020 13:14:05 +0000
Subject: [PATCH 20/24] removing copy to linear in zcopy

---
 net/ipv4/tcp.c | 28 ++++++++++++++++++----------
 1 file changed, 18 insertions(+), 10 deletions(-)

diff --git a/net/ipv4/tcp.c b/net/ipv4/tcp.c
index db3fa8977..a526efe53 100644
--- a/net/ipv4/tcp.c
+++ b/net/ipv4/tcp.c
@@ -1354,19 +1354,27 @@ int tcp_sendmsg_locked(struct sock *sk, struct msghdr *msg, size_t size)
 		if (copy > msg_data_left(msg))
 			copy = msg_data_left(msg);
 
-		/* Where to copy to? */
-		if (skb_availroom(skb) > 0 && !uarg->zerocopy ) {
-			/*TODO: WHy defuck? ... ignore this, maybve copy 64B - Next next...*/
-			/* We have some space in skb head. Superb! */
-			copy = min_t(int, copy, skb_availroom(skb));
-			err = skb_add_data_nocache(sk, skb, &msg->msg_iter, copy);
-			if (err)
-				goto do_fault;
-		} else if (!uarg || !uarg->zerocopy) {
+///* Where to copy to? */
+//if (skb_availroom(skb) > 0 && !uarg->zerocopy ) {
+//	/*TODO: WHy defuck? ... ignore this, maybve copy 64B - Next next...*/
+//	/* We have some space in skb head. Superb! */
+//	copy = min_t(int, copy, skb_availroom(skb));
+//	err = skb_add_data_nocache(sk, skb, &msg->msg_iter, copy);
+//	if (err)
+//		goto do_fault;
+//} else
+		if (!uarg || !uarg->zerocopy) {
 			bool merge = true;
 			int i = skb_shinfo(skb)->nr_frags;
 			struct page_frag *pfrag = sk_page_frag(sk);
 
+			if (skb_availroom(skb) > 0) {
+				copy = min_t(int, copy, skb_availroom(skb));
+				err = skb_add_data_nocache(sk, skb, &msg->msg_iter, copy);
+				if (err)
+					goto do_fault;
+				goto next;
+			}
 			if (!sk_page_frag_refill(sk, pfrag))
 				goto wait_for_memory;
 
@@ -1408,7 +1416,7 @@ int tcp_sendmsg_locked(struct sock *sk, struct msghdr *msg, size_t size)
 				goto do_error;
 			copy = err;
 		}
-
+next:
 		if (!copied)
 			TCP_SKB_CB(skb)->tcp_flags &= ~TCPHDR_PSH;
 
-- 
2.17.1

